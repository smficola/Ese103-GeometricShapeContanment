package geometricshapes;

public class Square extends Rectangle {
	public Square(double xV, double yV, double l){
		/* Il costruttore della classe derivata richiama il costruttore * della classe padre, impostando opportunamente i valori. */
		super(xV , yV, l, l);
	}
	public double getL()
	{
		return this.xSideLenght;
	}
	public void setL(double l)
	{if(l>0)
		this.setxSideLenght(l);
	else
	{
		throw new IllegalArgumentException("The value of a must biggest from 0.");
	}
	}
	@Override
	public void  setxSideLenght(double l)
	{
		if(l>0)
		{
			this.xSideLenght=l;
			this.ySideLenght=l;
		}
		else
		{
			throw new IllegalArgumentException("The value of a must biggest from 0.");
		}
	}
		
	  @Override
		public void setySideLenght(double l)
		{
			if(l>0)
			{
				this.xSideLenght=l;
				this.ySideLenght=l;
			}
			else
			{
				throw new IllegalArgumentException("The value of a must biggest from 0.");
			}
		}
		/* (non-Javadoc)
		 * @see java.lang.Object#toString()
		 */
		@Override
		public String toString() {
			return "Square [xV=" + xV + ", yV=" + yV + ", xSideLenght="
					+ xSideLenght + ", ySideLenght=" + ySideLenght + "]";
		}
		
		
	}


